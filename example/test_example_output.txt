======================================= test session starts ========================================
platform linux -- Python 3.7.2, pytest-4.1.0, py-1.7.0, pluggy-0.8.0 -- /usr/bin/python
cachedir: .pytest_cache
rootdir: /home/sebastian/forks/pytest-valgrind, inifile:
plugins: valgrind-0.0.0
collected 9 items                                                                                  

test_example.py::test_all_good PASSED                                                        [ 11%]
test_example.py::test_fails_but_valgrind_good xfail                                          [ 22%]
test_example.py::test_valgrind_error FAILED                                                  [ 33%]
test_example.py::test_valgrind_leak FAILED                                                   [ 44%]
test_example.py::test_valgrind_error_and_leak FAILED                                         [ 55%]
test_example.py::test_valgrind_leak_ignored xfail                                            [ 66%]
test_example.py::test_valgrind_error_ignored xfail                                           [ 77%]
test_example.py::test_valgrind_leak_ignored_but_errors_as_well FAILED                        [ 88%]
test_example.py::test_another_good_test PASSED                                               [100%]

============================================= FAILURES =============================================
_______________________________________ test_valgrind_error ________________________________________
[VALGRIND ERROR]

Valgrind has detected an error:

**20353** 
**20353** **********************************************************************
**20353** example/test_example.py::test_valgrind_error
**20353** **********************************************************************
==20353== Conditional jump or move depends on uninitialised value(s)
==20353==    at 0x4B4F9A3: PyBool_FromLong (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x828C411: access_invalid (valgrind.c:60)
==20353==    by 0x4BC2860: _PyMethodDef_RawFastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2A00: _PyCFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C38E94: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7BB58: _PyEval_EvalCodeWithName (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2181: _PyFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C358EC: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353== 
==20353== LEAK SUMMARY:
==20353==    definitely lost: 148 (+0) bytes in 1 (+0) blocks
==20353==    indirectly lost: 0 (+0) bytes in 0 (+0) blocks
==20353==      possibly lost: 5,271,272 (+108,478) bytes in 50,430 (+323) blocks
==20353==    still reachable: 11,550,177 (+30,986) bytes in 91,098 (+345) blocks
==20353==                       of which reachable via heuristic:
==20353==                         newarray           : 93 (+0) bytes in 2 (+0) blocks
==20353==         suppressed: 0 (+0) bytes in 0 (+0) blocks
==20353== Reachable blocks (those to which a pointer was found) are not shown.
==20353== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20353== 
**20353** 
**20353** **********************************************************************

________________________________________ test_valgrind_leak ________________________________________
[VALGRIND LEAK]

Valgrind has detected a memory leak:

**20353** 
**20353** **********************************************************************
**20353** example/test_example.py::test_valgrind_leak
**20353** **********************************************************************
==20353== 8 (+8) bytes in 1 (+1) blocks are definitely lost in loss record 27 of 12,265
==20353==    at 0x483777F: malloc (vg_replace_malloc.c:299)
==20353==    by 0x828C3DE: create_leak (valgrind.c:42)
==20353==    by 0x4BC2860: _PyMethodDef_RawFastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2A00: _PyCFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C38E94: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7BB58: _PyEval_EvalCodeWithName (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2181: _PyFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C358EC: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353== 
==20353== LEAK SUMMARY:
==20353==    definitely lost: 156 (+8) bytes in 2 (+1) blocks
==20353==    indirectly lost: 0 (+0) bytes in 0 (+0) blocks
==20353==      possibly lost: 5,271,770 (+498) bytes in 50,430 (+0) blocks
==20353==    still reachable: 11,554,804 (+4,627) bytes in 91,122 (+24) blocks
==20353==                       of which reachable via heuristic:
==20353==                         newarray           : 93 (+0) bytes in 2 (+0) blocks
==20353==         suppressed: 0 (+0) bytes in 0 (+0) blocks
==20353== Reachable blocks (those to which a pointer was found) are not shown.
==20353== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20353== 
**20353** 
**20353** **********************************************************************

___________________________________ test_valgrind_error_and_leak ___________________________________
[VALGRIND ERROR+LEAK]

Valgrind detected both an error(s) and a leak(s):

**20353** 
**20353** **********************************************************************
**20353** example/test_example.py::test_valgrind_error_and_leak
**20353** **********************************************************************
==20353== 16 (+8) bytes in 2 (+1) blocks are definitely lost in loss record 40 of 12,256
==20353==    at 0x483777F: malloc (vg_replace_malloc.c:299)
==20353==    by 0x828C3DE: create_leak (valgrind.c:42)
==20353==    by 0x4BC2860: _PyMethodDef_RawFastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2A00: _PyCFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C38E94: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7BB58: _PyEval_EvalCodeWithName (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2181: _PyFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C358EC: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353== 
==20353== LEAK SUMMARY:
==20353==    definitely lost: 164 (+8) bytes in 3 (+1) blocks
==20353==    indirectly lost: 0 (+0) bytes in 0 (+0) blocks
==20353==      possibly lost: 5,271,678 (-92) bytes in 50,430 (+0) blocks
==20353==    still reachable: 11,558,882 (+4,078) bytes in 91,143 (+21) blocks
==20353==                       of which reachable via heuristic:
==20353==                         newarray           : 93 (+0) bytes in 2 (+0) blocks
==20353==         suppressed: 0 (+0) bytes in 0 (+0) blocks
==20353== Reachable blocks (those to which a pointer was found) are not shown.
==20353== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20353== 
**20353** 
**20353** **********************************************************************

__________________________ test_valgrind_leak_ignored_but_errors_as_well ___________________________
[VALGRIND ERROR+LEAK]

Valgrind detected both an error(s) and a leak(s):

**20353** 
**20353** **********************************************************************
**20353** example/test_example.py::test_valgrind_leak_ignored_but_errors_as_well
**20353** **********************************************************************
==20353== 32 (+8) bytes in 4 (+1) blocks are definitely lost in loss record 1,236 of 12,282
==20353==    at 0x483777F: malloc (vg_replace_malloc.c:299)
==20353==    by 0x828C3DE: create_leak (valgrind.c:42)
==20353==    by 0x4BC2860: _PyMethodDef_RawFastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2A00: _PyCFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C38E94: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7CBEA: _PyFunction_FastCallDict (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C361A9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4B7BB58: _PyEval_EvalCodeWithName (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4BC2181: _PyFunction_FastCallKeywords (in /usr/lib/libpython3.7m.so.1.0)
==20353==    by 0x4C358EC: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.7m.so.1.0)
==20353== 
==20353== LEAK SUMMARY:
==20353==    definitely lost: 180 (+8) bytes in 5 (+1) blocks
==20353==    indirectly lost: 0 (+0) bytes in 0 (+0) blocks
==20353==      possibly lost: 5,277,311 (+1,983) bytes in 50,448 (+9) blocks
==20353==    still reachable: 11,600,279 (+16,862) bytes in 91,497 (+159) blocks
==20353==                       of which reachable via heuristic:
==20353==                         newarray           : 93 (+0) bytes in 2 (+0) blocks
==20353==         suppressed: 0 (+0) bytes in 0 (+0) blocks
==20353== Reachable blocks (those to which a pointer was found) are not shown.
==20353== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20353== 
**20353** 
**20353** **********************************************************************

========================== 4 failed, 2 passed, 3 xfailed in 10.61 seconds ==========================

